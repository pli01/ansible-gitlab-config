---
# Manage Gitlab users
#
# `gitlab_users` is a list of the form
#    - username: value
#      name: value
#      email: value
#
- name: "Get current settings for user {{ item.username }}"
  uri:
    url: "{{ gitlab_api_url }}/users?username={{ item.username }}"
    method: GET
    headers:
      PRIVATE-TOKEN: "{{ gitlab_token }}"
    status_code: 200
    validate_certs: "no"
  register: gitlab_users_request

- set_fact:
    current_user: ""
- set_fact:
    current_user: "{{ gitlab_users_request.json | first }}"
  when: ( gitlab_users_request.json is defined ) and ( gitlab_users_request.json )

#- name: difference
#  debug:
#    msg: "{{ item | difference(current_user) | sort }}"
#
#- name: intersect
#  debug:
#    msg: "{{ item | intersect(current_user) |sort }}"
#
#- set_fact:
#    user_intersect: "{{ item | intersect(current_user) |sort }}"
#
#- debug:
#    var: user_intersect
#
- include: delete_user.yml
  vars:
    username: "{{ item.username }}"
    user_id: "{{ current_user.id }}"
    json: "{{ item }}"
  when: ( current_user.id is defined ) and ( current_user.id )
        and ( item.delete is defined ) and ( item.delete | bool )

- include: create_user.yml
  vars:
    username: "{{ item.username }}"
    json: "{{ item }}"
  when: ( ( current_user.id is not defined ) or ( current_user.id is none ) or ( current_user.id | trim =="" ) )
       and ( item.delete is not defined ) or ( item.delete is defined and not ( item.delete | bool ) )

- include: update_user.yml
  vars:
    username: "{{ item.username }}"
    user_id: "{{ current_user.id }}"
    json: "{{ item }}"
  when: ( ( current_user.id is defined ) and ( current_user.id is not none ) and (current_user.id | trim !="") )
       and ( ( item.delete is not defined ) or ( item.delete is defined and not item.delete ) )
       and ( gitlab_update_users | bool )
